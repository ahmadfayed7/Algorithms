////////////////////////////general/////////////////////////////////////
void Swap (int *x , int *y);
int FindMax(int *a ,int ArraySize);
//////////////////////////////////////////////////////////////////////
////////////////////heapsort////////////////////////////////////////////
int Parent(int i);
int Left(int i);
int Right(int i);
void MaxHeapify(int * a,int ArraySize,int i);
void BuildMaxHeap(int * a,int ArraySize);
void HeapSort(int * a ,int ArraySize);
///////////////////////////////////////////////////////////////////////
///////////////insertion sort/////////////////////////////////////////
void  InsertionSort(int * a ,int ArraySize);
///////////////////////////////////////////////////////////////////////
///////////////Bubble sort/////////////////////////////////////////
void  BububleSort(int * a ,int ArraySize);
///////////////////////////////////////////////////////////////////
////////////////mergeSort/////////////////////////////////////////
void Merge (int *a ,int p , int q , int r);
void MergeSortAux(int *a ,int p ,int r);
void MergeSort(int *a ,int ArraySize);
///////////////////////////////////////////////////////////////////
//////////////////////QuickSort///////////////////////////////////
int Partion(int *a ,int p ,int r);
void QuickSortAux(int *a ,int p ,int r);
void QuickSort(int *a ,int ArraySize);
/////////////////////////////////////////////////////////////////
///////////////////////countingSort/////////////////////////////
void CountingSortAux(int *a ,int ArraySize ,int Max);
void CountingSort(int *a ,int ArraySize);
/////////////////////////////////////////////////////////////////
//////////////////////RadixSort//////////////////////////////////
void CountingSortForRadixSort(int *a ,int ArraySize,int Max );
void RadixSort (int *a ,int ArraySize);
/////////////////////////////////////////////////////////////////
/////////////////////BucketSort/////////////////////////////////
typedef struct bucket
{
int value ;
struct bucket *next;
}Bucket;
void BucketSort (int *a ,int ArraySize);
void bubbleSort(Bucket *start) ;
///////////////////////////////////////////////////////////////
